generator client {
    provider = "prisma-client-js"
    output   = "../generated/nook"
}

datasource db {
    provider = "postgresql"
    url      = env("NOOK_DATABASE_URL")
}

model User {
    fid          String   @id
    signedUpAt   DateTime
    loggedInAt   DateTime
    refreshToken String
    siwfData     Json

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    createdNooks Nook[]
    nooks        NookMembership[]
}

model NookMembership {
    fid    String
    nookId String
    index  Int

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    user User @relation(fields: [fid], references: [fid])
    nook Nook @relation(fields: [nookId], references: [id])

    @@id([fid, nookId])
}

model Nook {
    id          String  @id @default(uuid())
    creatorFid  String
    name        String
    description String
    imageUrl    String?
    visibility  String
    metadata    Json

    createdAt DateTime  @default(now())
    updatedAt DateTime  @default(now()) @updatedAt
    deletedAt DateTime?

    members NookMembership[]
    User    User?            @relation(fields: [userFid], references: [fid])
    userFid String?
}

model Feed {
    id         String @id @default(uuid())
    type       String
    creatorFid String
    hash       String @unique
    filter     Json

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
}

model UserList {
    id          String  @id @default(uuid())
    creatorFid  String
    name        String
    description String
    imageUrl    String?

    users UserListItem[]

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
}

model UserListItem {
    listId String
    fid    String

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    list UserList @relation(fields: [listId], references: [id])

    @@id([listId, fid])
}

model ChannelList {
    id          String  @id @default(uuid())
    creatorFid  String
    name        String
    description String
    imageUrl    String?

    channels ChannelListItem[]

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
}

model ChannelListItem {
    listId    String
    channelId String

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    list ChannelList @relation(fields: [listId], references: [id])

    @@id([listId, channelId])
}
