generator client {
    provider = "prisma-client-js"
    output   = "../generated/nook"
}

datasource db {
    provider = "postgresql"
    url      = env("NOOK_DATABASE_URL")
}

model User {
    fid           String   @id
    signedUpAt    DateTime
    loggedInAt    DateTime
    refreshToken  String
    signerEnabled Boolean

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    signers      Signer[]
    createdNooks Nook[]
    nooks        NookMembership[]
}

model Signer {
    fid         String
    publicKey   String
    privateKey  String
    token       String @unique
    deeplinkUrl String
    state       String

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
    User      User?    @relation(fields: [userFid], references: [fid])
    userFid   String?

    @@id([fid, publicKey])
}

model NookMembership {
    fid    String
    nookId String

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    user User @relation(fields: [fid], references: [fid])
    nook Nook @relation(fields: [nookId], references: [id])

    @@id([fid, nookId])
}

model Nook {
    id          String  @id @default(uuid())
    creatorFid  String
    name        String
    description String?
    imageUrl    String?
    metadata    Json

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    creator User             @relation(fields: [creatorFid], references: [fid])
    members NookMembership[]
}
