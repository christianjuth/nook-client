generator client {
    provider = "prisma-client-js"
    output   = "../generated/farcaster"
}

datasource db {
    provider = "postgresql"
    url      = env("FARCASTER_DATABASE_URL")
}

model Subscription {
    id      String @id
    eventId BigInt
}

model FarcasterUserData {
    hash            String
    hashScheme      Int
    signature       String
    signatureScheme Int
    signer          String

    fid   BigInt
    type  Int
    value String

    timestamp DateTime

    @@id([fid, type])
}

model FarcasterUsernameProof {
    username  String @id
    fid       BigInt
    type      Int
    owner     String
    signature String

    timestamp DateTime
    deletedAt DateTime?

    @@index([fid])
}

model FarcasterVerification {
    hash            String
    hashScheme      Int
    signature       String
    signatureScheme Int
    signer          String

    fid BigInt

    address          String
    claimSignature   String
    blockHash        String
    verificationType Int
    protocol         Int
    chainId          Int

    timestamp DateTime
    deletedAt DateTime?

    @@id([fid, address])
}

model FarcasterCast {
    hash            String
    hashScheme      Int
    signature       String
    signatureScheme Int
    signer          String

    fid  BigInt
    text String

    parentFid      BigInt?
    parentHash     String?
    parentUrl      String?
    rootParentFid  BigInt
    rootParentHash String
    rootParentUrl  String?

    rawMentions   Json?
    rawCastEmbeds Json?
    rawUrlEmbeds  Json?

    mentions   FarcasterCastMention[]
    castEmbeds FarcasterCastEmbedCast[]
    urlEmbeds  FarcasterCastEmbedUrl[]

    timestamp DateTime
    deletedAt DateTime?

    @@id([hash])
    @@index([fid, hash])
    @@index([parentHash])
    @@index([rootParentHash])
    @@index([fid, timestamp])
    @@index([fid, timestamp, parentHash])
    @@index([timestamp, fid, deletedAt, parentHash])
    @@index([parentUrl, timestamp])
    @@index([parentUrl, timestamp, parentHash])
}

model FarcasterCastMention {
    hash String
    fid  BigInt

    mention         BigInt
    mentionPosition BigInt

    timestamp DateTime
    deletedAt DateTime?

    cast FarcasterCast @relation(fields: [hash], references: [hash], onDelete: Cascade)

    @@id([hash, mention, mentionPosition])
    @@index([fid])
}

model FarcasterCastEmbedCast {
    hash String
    fid  BigInt

    embedHash String
    embedFid  BigInt

    timestamp DateTime
    deletedAt DateTime?

    cast FarcasterCast @relation(fields: [hash], references: [hash], onDelete: Cascade)

    @@id([hash, embedHash])
    @@index([fid])
    @@index([embedHash])
}

model FarcasterCastEmbedUrl {
    hash String
    fid  BigInt

    url String

    timestamp DateTime
    deletedAt DateTime?

    cast FarcasterCast @relation(fields: [hash], references: [hash], onDelete: Cascade)

    @@id([hash, url])
    @@index([fid])
}

model FarcasterCastReaction {
    hash            String
    hashScheme      Int
    signature       String
    signatureScheme Int
    signer          String

    targetHash   String
    reactionType Int
    fid          BigInt

    targetFid BigInt

    timestamp DateTime
    deletedAt DateTime?

    @@id([targetHash, reactionType, fid])
    @@index([fid])
}

model FarcasterUrlReaction {
    hash            String
    hashScheme      Int
    signature       String
    signatureScheme Int
    signer          String

    targetUrl    String
    reactionType Int
    fid          BigInt

    timestamp DateTime
    deletedAt DateTime?

    @@id([targetUrl, reactionType, fid])
    @@index([fid])
}

model FarcasterLink {
    hash            String
    hashScheme      Int
    signature       String
    signatureScheme Int
    signer          String

    fid       BigInt
    linkType  String
    targetFid BigInt

    timestamp DateTime
    deletedAt DateTime?

    @@id([fid, linkType, targetFid])
    @@index([targetFid, linkType])
}

model FarcasterParentUrl {
    url         String  @id
    name        String
    description String
    imageUrl    String
    channelId   String
    creatorId   String?

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
}
